# Makefile.in generated by automake 1.9.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 406248 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = dolphin$(EXEEXT)
subdir = src
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(rcdir)" \
	"$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_dolphin_OBJECTS = main.$(OBJEXT) dolphin.$(OBJEXT) \
	dolphinview.$(OBJEXT) urlnavigator.$(OBJEXT) \
	urlnavigatorbutton.$(OBJEXT) viewpropertiesdialog.$(OBJEXT) \
	dolphinstatusbar.$(OBJEXT) dolphindirlister.$(OBJEXT) \
	viewproperties.$(OBJEXT) dolphindetailsview.$(OBJEXT) \
	dolphiniconsview.$(OBJEXT) dolphinsettings.$(OBJEXT) \
	bookmarkselector.$(OBJEXT) urlbutton.$(OBJEXT) \
	itemeffectsmanager.$(OBJEXT) dolphincontextmenu.$(OBJEXT) \
	undomanager.$(OBJEXT) progressindicator.$(OBJEXT) \
	dolphindetailsviewsettings.$(OBJEXT) \
	dolphiniconsviewsettings.$(OBJEXT) \
	iconsviewsettingspage.$(OBJEXT) pixmapviewer.$(OBJEXT) \
	dolphinsettingsdialog.$(OBJEXT) viewsettingspage.$(OBJEXT) \
	detailsviewsettingspage.$(OBJEXT) \
	statusbarmessagelabel.$(OBJEXT) dolphinsettingsbase.$(OBJEXT) \
	generalsettingspage.$(OBJEXT) bookmarkssettingspage.$(OBJEXT) \
	editbookmarkdialog.$(OBJEXT) settingspagebase.$(OBJEXT) \
	sidebar.$(OBJEXT) sidebarsettings.$(OBJEXT) \
	sidebarpage.$(OBJEXT) bookmarkssidebarpage.$(OBJEXT) \
	infosidebarpage.$(OBJEXT) statusbarspaceinfo.$(OBJEXT) \
	renamedialog.$(OBJEXT) filterbar.$(OBJEXT)
#>- dolphin_OBJECTS = $(am_dolphin_OBJECTS)
#>+ 25
dolphin_final_OBJECTS = dolphin.all_cpp.o 
dolphin_nofinal_OBJECTS = main.$(OBJEXT) dolphin.$(OBJEXT) \
	dolphinview.$(OBJEXT) urlnavigator.$(OBJEXT) \
	urlnavigatorbutton.$(OBJEXT) viewpropertiesdialog.$(OBJEXT) \
	dolphinstatusbar.$(OBJEXT) dolphindirlister.$(OBJEXT) \
	viewproperties.$(OBJEXT) dolphindetailsview.$(OBJEXT) \
	dolphiniconsview.$(OBJEXT) dolphinsettings.$(OBJEXT) \
	bookmarkselector.$(OBJEXT) urlbutton.$(OBJEXT) \
	itemeffectsmanager.$(OBJEXT) dolphincontextmenu.$(OBJEXT) \
	undomanager.$(OBJEXT) progressindicator.$(OBJEXT) \
	dolphindetailsviewsettings.$(OBJEXT) \
	dolphiniconsviewsettings.$(OBJEXT) \
	iconsviewsettingspage.$(OBJEXT) pixmapviewer.$(OBJEXT) \
	dolphinsettingsdialog.$(OBJEXT) viewsettingspage.$(OBJEXT) \
	detailsviewsettingspage.$(OBJEXT) \
	statusbarmessagelabel.$(OBJEXT) dolphinsettingsbase.$(OBJEXT) \
	generalsettingspage.$(OBJEXT) bookmarkssettingspage.$(OBJEXT) \
	editbookmarkdialog.$(OBJEXT) settingspagebase.$(OBJEXT) \
	sidebar.$(OBJEXT) sidebarsettings.$(OBJEXT) \
	sidebarpage.$(OBJEXT) bookmarkssidebarpage.$(OBJEXT) \
	infosidebarpage.$(OBJEXT) statusbarspaceinfo.$(OBJEXT) \
	renamedialog.$(OBJEXT) filterbar.$(OBJEXT)\
urlbutton.moc.o bookmarkssidebarpage.moc.o infosidebarpage.moc.o urlnavigatorbutton.moc.o sidebarpage.moc.o statusbarmessagelabel.moc.o sidebar.moc.o 
@KDE_USE_FINAL_FALSE@dolphin_OBJECTS = $(dolphin_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@dolphin_OBJECTS = $(dolphin_final_OBJECTS)
am__DEPENDENCIES_1 =
dolphin_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(dolphin_SOURCES)
DIST_SOURCES = $(dolphin_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-exec-recursive install-info-recursive \
#>- 	install-recursive installcheck-recursive installdirs-recursive \
#>- 	pdf-recursive ps-recursive uninstall-info-recursive \
#>- 	uninstall-recursive
#>+ 6
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
rcDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(rc_DATA) $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
include_x11_FALSE = @include_x11_FALSE@
include_x11_TRUE = @include_x11_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
SUBDIRS = pics servicemenus

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# the library search path.
dolphin_LDFLAGS = $(KDE_RPATH) $(all_libraries)

# the libraries to link against.
dolphin_LDADD = $(LIB_KFILE) $(LIB_KDEPRINT)

# which sources should be compiled for dolphin
dolphin_SOURCES = main.cpp dolphin.cpp dolphinview.cpp urlnavigator.cpp \
	urlnavigatorbutton.cpp viewpropertiesdialog.cpp dolphinstatusbar.cpp dolphindirlister.cpp \
	viewproperties.cpp dolphindetailsview.cpp dolphiniconsview.cpp dolphinsettings.cpp \
	bookmarkselector.cpp urlbutton.cpp itemeffectsmanager.cpp dolphincontextmenu.cpp \
	undomanager.cpp progressindicator.cpp dolphindetailsviewsettings.cpp \
	dolphiniconsviewsettings.cpp iconsviewsettingspage.cpp pixmapviewer.cpp dolphinsettingsdialog.cpp \
	viewsettingspage.cpp detailsviewsettingspage.cpp statusbarmessagelabel.cpp \
	dolphinsettingsbase.cpp generalsettingspage.cpp bookmarkssettingspage.cpp \
	editbookmarkdialog.cpp settingspagebase.cpp sidebar.cpp sidebarsettings.cpp sidebarpage.cpp \
	bookmarkssidebarpage.cpp infosidebarpage.cpp statusbarspaceinfo.cpp renamedialog.cpp \
	filterbar.cpp


# these are the headers for your project
noinst_HEADERS = dolphin.h dolphinview.h urlnavigator.h urlnavigatorbutton.h \
	viewpropertiesdialog.h dolphinstatusbar.h dolphindirlister.h viewproperties.h \
	dolphindetailsview.h dolphiniconsview.h dolphinsettings.h bookmarkselector.h urlbutton.h \
	itemeffectsmanager.h dolphincontextmenu.h undomanager.h dolphindetailsviewsettings.h \
	dolphiniconsviewsettings.h	iconsviewsettingspage.h pixmapviewer.h \
	dolphinsettingsdialog.h detailsviewsettingspage.h \
	viewsettingspage.h statusbarmessagelabel.h dolphinsettingsbase.h generalsettingspage.h \
	bookmarkssettingspage.h editbookmarkdialog.h settingspagebase.h statusbarspaceinfo.h \
	renamedialog.h sidebar.h sidebarsettings.h sidebarpage.h bookmarkssidebarpage.h \
	infosidebarpage.h filterbar.h


# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO

# this is where the kdelnk file will go
kdelnkdir = $(kde_appsdir)/System
xdg_apps_DATA = dolphin.desktop

# this is where the XML-GUI resource file goes
rcdir = $(kde_datadir)/dolphin
rc_DATA = dolphinui.rc
KDE_ICON = AUTO
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
dolphin$(EXEEXT): $(dolphin_OBJECTS) $(dolphin_DEPENDENCIES) 
	@rm -f dolphin$(EXEEXT)
	$(CXXLINK) $(dolphin_LDFLAGS) $(dolphin_OBJECTS) $(dolphin_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bookmarkselector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bookmarkssettingspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bookmarkssidebarpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/detailsviewsettingspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphincontextmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphindetailsview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphindetailsviewsettings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphindirlister.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphiniconsview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphiniconsviewsettings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphinsettings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphinsettingsbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphinsettingsdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphinstatusbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dolphinview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editbookmarkdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filterbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generalsettingspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iconsviewsettingspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/infosidebarpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itemeffectsmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixmapviewer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/progressindicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/renamedialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/settingspagebase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sidebar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sidebarpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sidebarsettings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statusbarmessagelabel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statusbarspaceinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/undomanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/urlbutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/urlnavigator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/urlnavigatorbutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewproperties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewpropertiesdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewsettingspage.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(mkdir_p) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(mkdir_p) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-rcDATA install-xdg_appsDATA
#>+ 1
install-data-am: install-kde-icons  install-rcDATA install-xdg_appsDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am uninstall-rcDATA \
#>- 	uninstall-xdg_appsDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am uninstall-rcDATA \
	uninstall-xdg_appsDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-rcDATA \
	install-strip install-xdg_appsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am uninstall-rcDATA \
	uninstall-xdg_appsDATA


messages: rc.cpp
	$(EXTRACTRC) `find . -name \*.ui -o -name \*.rc` > rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/dolphin.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
dolphiniconsview.moc: $(srcdir)/dolphiniconsview.h
	$(MOC) $(srcdir)/dolphiniconsview.h -o dolphiniconsview.moc

#>+ 2
mocs: dolphiniconsview.moc

#>+ 3
settingspagebase.moc: $(srcdir)/settingspagebase.h
	$(MOC) $(srcdir)/settingspagebase.h -o settingspagebase.moc

#>+ 2
mocs: settingspagebase.moc

#>+ 3
urlbutton.moc.cpp: $(srcdir)/urlbutton.h
	$(MOC) $(srcdir)/urlbutton.h -o urlbutton.moc.cpp

#>+ 2
mocs: urlbutton.moc.cpp

#>+ 3
viewpropertiesdialog.moc: $(srcdir)/viewpropertiesdialog.h
	$(MOC) $(srcdir)/viewpropertiesdialog.h -o viewpropertiesdialog.moc

#>+ 2
mocs: viewpropertiesdialog.moc

#>+ 3
editbookmarkdialog.moc: $(srcdir)/editbookmarkdialog.h
	$(MOC) $(srcdir)/editbookmarkdialog.h -o editbookmarkdialog.moc

#>+ 2
mocs: editbookmarkdialog.moc

#>+ 3
bookmarkssettingspage.moc: $(srcdir)/bookmarkssettingspage.h
	$(MOC) $(srcdir)/bookmarkssettingspage.h -o bookmarkssettingspage.moc

#>+ 2
mocs: bookmarkssettingspage.moc

#>+ 3
statusbarspaceinfo.moc: $(srcdir)/statusbarspaceinfo.h
	$(MOC) $(srcdir)/statusbarspaceinfo.h -o statusbarspaceinfo.moc

#>+ 2
mocs: statusbarspaceinfo.moc

#>+ 3
renamedialog.moc: $(srcdir)/renamedialog.h
	$(MOC) $(srcdir)/renamedialog.h -o renamedialog.moc

#>+ 2
mocs: renamedialog.moc

#>+ 3
dolphinsettingsdialog.moc: $(srcdir)/dolphinsettingsdialog.h
	$(MOC) $(srcdir)/dolphinsettingsdialog.h -o dolphinsettingsdialog.moc

#>+ 2
mocs: dolphinsettingsdialog.moc

#>+ 3
viewsettingspage.moc: $(srcdir)/viewsettingspage.h
	$(MOC) $(srcdir)/viewsettingspage.h -o viewsettingspage.moc

#>+ 2
mocs: viewsettingspage.moc

#>+ 3
generalsettingspage.moc: $(srcdir)/generalsettingspage.h
	$(MOC) $(srcdir)/generalsettingspage.h -o generalsettingspage.moc

#>+ 2
mocs: generalsettingspage.moc

#>+ 3
urlnavigator.moc: $(srcdir)/urlnavigator.h
	$(MOC) $(srcdir)/urlnavigator.h -o urlnavigator.moc

#>+ 2
mocs: urlnavigator.moc

#>+ 3
iconsviewsettingspage.moc: $(srcdir)/iconsviewsettingspage.h
	$(MOC) $(srcdir)/iconsviewsettingspage.h -o iconsviewsettingspage.moc

#>+ 2
mocs: iconsviewsettingspage.moc

#>+ 3
dolphin.moc: $(srcdir)/dolphin.h
	$(MOC) $(srcdir)/dolphin.h -o dolphin.moc

#>+ 2
mocs: dolphin.moc

#>+ 3
dolphindetailsview.moc: $(srcdir)/dolphindetailsview.h
	$(MOC) $(srcdir)/dolphindetailsview.h -o dolphindetailsview.moc

#>+ 2
mocs: dolphindetailsview.moc

#>+ 3
bookmarkssidebarpage.moc.cpp: $(srcdir)/bookmarkssidebarpage.h
	$(MOC) $(srcdir)/bookmarkssidebarpage.h -o bookmarkssidebarpage.moc.cpp

#>+ 2
mocs: bookmarkssidebarpage.moc.cpp

#>+ 3
filterbar.moc: $(srcdir)/filterbar.h
	$(MOC) $(srcdir)/filterbar.h -o filterbar.moc

#>+ 2
mocs: filterbar.moc

#>+ 3
dolphinview.moc: $(srcdir)/dolphinview.h
	$(MOC) $(srcdir)/dolphinview.h -o dolphinview.moc

#>+ 2
mocs: dolphinview.moc

#>+ 3
infosidebarpage.moc.cpp: $(srcdir)/infosidebarpage.h
	$(MOC) $(srcdir)/infosidebarpage.h -o infosidebarpage.moc.cpp

#>+ 2
mocs: infosidebarpage.moc.cpp

#>+ 3
urlnavigatorbutton.moc.cpp: $(srcdir)/urlnavigatorbutton.h
	$(MOC) $(srcdir)/urlnavigatorbutton.h -o urlnavigatorbutton.moc.cpp

#>+ 2
mocs: urlnavigatorbutton.moc.cpp

#>+ 3
sidebarpage.moc.cpp: $(srcdir)/sidebarpage.h
	$(MOC) $(srcdir)/sidebarpage.h -o sidebarpage.moc.cpp

#>+ 2
mocs: sidebarpage.moc.cpp

#>+ 3
undomanager.moc: $(srcdir)/undomanager.h
	$(MOC) $(srcdir)/undomanager.h -o undomanager.moc

#>+ 2
mocs: undomanager.moc

#>+ 3
statusbarmessagelabel.moc.cpp: $(srcdir)/statusbarmessagelabel.h
	$(MOC) $(srcdir)/statusbarmessagelabel.h -o statusbarmessagelabel.moc.cpp

#>+ 2
mocs: statusbarmessagelabel.moc.cpp

#>+ 3
sidebar.moc.cpp: $(srcdir)/sidebar.h
	$(MOC) $(srcdir)/sidebar.h -o sidebar.moc.cpp

#>+ 2
mocs: sidebar.moc.cpp

#>+ 3
dolphindirlister.moc: $(srcdir)/dolphindirlister.h
	$(MOC) $(srcdir)/dolphindirlister.h -o dolphindirlister.moc

#>+ 2
mocs: dolphindirlister.moc

#>+ 3
bookmarkselector.moc: $(srcdir)/bookmarkselector.h
	$(MOC) $(srcdir)/bookmarkselector.h -o bookmarkselector.moc

#>+ 2
mocs: bookmarkselector.moc

#>+ 3
pixmapviewer.moc: $(srcdir)/pixmapviewer.h
	$(MOC) $(srcdir)/pixmapviewer.h -o pixmapviewer.moc

#>+ 2
mocs: pixmapviewer.moc

#>+ 3
detailsviewsettingspage.moc: $(srcdir)/detailsviewsettingspage.h
	$(MOC) $(srcdir)/detailsviewsettingspage.h -o detailsviewsettingspage.moc

#>+ 2
mocs: detailsviewsettingspage.moc

#>+ 3
dolphinstatusbar.moc: $(srcdir)/dolphinstatusbar.h
	$(MOC) $(srcdir)/dolphinstatusbar.h -o dolphinstatusbar.moc

#>+ 2
mocs: dolphinstatusbar.moc

#>+ 3
clean-metasources:
	-rm -f  dolphiniconsview.moc settingspagebase.moc urlbutton.moc.cpp viewpropertiesdialog.moc editbookmarkdialog.moc bookmarkssettingspage.moc statusbarspaceinfo.moc renamedialog.moc dolphinsettingsdialog.moc viewsettingspage.moc generalsettingspage.moc urlnavigator.moc iconsviewsettingspage.moc dolphin.moc dolphindetailsview.moc bookmarkssidebarpage.moc.cpp filterbar.moc dolphinview.moc infosidebarpage.moc.cpp urlnavigatorbutton.moc.cpp sidebarpage.moc.cpp undomanager.moc statusbarmessagelabel.moc.cpp sidebar.moc.cpp dolphindirlister.moc bookmarkselector.moc pixmapviewer.moc detailsviewsettingspage.moc dolphinstatusbar.moc

#>+ 2
KDE_DIST=dolphin.lsm hi48-app-dolphin.png dolphinui.rc hi22-app-dolphin.png hi64-app-dolphin.png hi32-app-dolphin.png progressindicator.h hi128-app-dolphin.png dolphin.desktop Makefile.in hi16-app-dolphin.png Makefile.am 

#>+ 2
docs-am:

#>+ 22
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-dolphin.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/dolphin.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps
	$(INSTALL_DATA) $(srcdir)/hi128-app-dolphin.png $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/dolphin.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-dolphin.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/dolphin.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-dolphin.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/dolphin.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-dolphin.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/dolphin.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-dolphin.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/dolphin.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/dolphin.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/dolphin.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/dolphin.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/dolphin.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/dolphin.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/dolphin.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
dolphin.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/dolphin.cpp $(srcdir)/dolphinview.cpp $(srcdir)/urlnavigator.cpp $(srcdir)/urlnavigatorbutton.cpp $(srcdir)/viewpropertiesdialog.cpp $(srcdir)/dolphinstatusbar.cpp $(srcdir)/dolphindirlister.cpp $(srcdir)/viewproperties.cpp $(srcdir)/dolphindetailsview.cpp $(srcdir)/dolphiniconsview.cpp $(srcdir)/dolphinsettings.cpp $(srcdir)/bookmarkselector.cpp $(srcdir)/urlbutton.cpp $(srcdir)/itemeffectsmanager.cpp $(srcdir)/dolphincontextmenu.cpp $(srcdir)/undomanager.cpp $(srcdir)/progressindicator.cpp $(srcdir)/dolphindetailsviewsettings.cpp $(srcdir)/dolphiniconsviewsettings.cpp $(srcdir)/iconsviewsettingspage.cpp $(srcdir)/pixmapviewer.cpp $(srcdir)/dolphinsettingsdialog.cpp $(srcdir)/viewsettingspage.cpp $(srcdir)/detailsviewsettingspage.cpp $(srcdir)/statusbarmessagelabel.cpp $(srcdir)/dolphinsettingsbase.cpp $(srcdir)/generalsettingspage.cpp $(srcdir)/bookmarkssettingspage.cpp $(srcdir)/editbookmarkdialog.cpp $(srcdir)/settingspagebase.cpp $(srcdir)/sidebar.cpp $(srcdir)/sidebarsettings.cpp $(srcdir)/sidebarpage.cpp $(srcdir)/bookmarkssidebarpage.cpp $(srcdir)/infosidebarpage.cpp $(srcdir)/statusbarspaceinfo.cpp $(srcdir)/renamedialog.cpp $(srcdir)/filterbar.cpp urlbutton.moc.cpp bookmarkssidebarpage.moc.cpp infosidebarpage.moc.cpp urlnavigatorbutton.moc.cpp sidebarpage.moc.cpp sidebar.moc.cpp statusbarmessagelabel.moc.cpp  settingspagebase.moc dolphiniconsview.moc editbookmarkdialog.moc viewpropertiesdialog.moc bookmarkssettingspage.moc statusbarspaceinfo.moc renamedialog.moc dolphinsettingsdialog.moc viewsettingspage.moc generalsettingspage.moc urlnavigator.moc iconsviewsettingspage.moc dolphin.moc dolphindetailsview.moc filterbar.moc dolphinview.moc undomanager.moc dolphindirlister.moc bookmarkselector.moc pixmapviewer.moc detailsviewsettingspage.moc dolphinstatusbar.moc
	@echo 'creating dolphin.all_cpp.cpp ...'; \
	rm -f dolphin.all_cpp.files dolphin.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> dolphin.all_cpp.final; \
	for file in main.cpp dolphin.cpp dolphinview.cpp urlnavigator.cpp urlnavigatorbutton.cpp viewpropertiesdialog.cpp dolphinstatusbar.cpp dolphindirlister.cpp viewproperties.cpp dolphindetailsview.cpp dolphiniconsview.cpp dolphinsettings.cpp bookmarkselector.cpp urlbutton.cpp itemeffectsmanager.cpp dolphincontextmenu.cpp undomanager.cpp progressindicator.cpp dolphindetailsviewsettings.cpp dolphiniconsviewsettings.cpp iconsviewsettingspage.cpp pixmapviewer.cpp dolphinsettingsdialog.cpp viewsettingspage.cpp detailsviewsettingspage.cpp statusbarmessagelabel.cpp dolphinsettingsbase.cpp generalsettingspage.cpp bookmarkssettingspage.cpp editbookmarkdialog.cpp settingspagebase.cpp sidebar.cpp sidebarsettings.cpp sidebarpage.cpp bookmarkssidebarpage.cpp infosidebarpage.cpp statusbarspaceinfo.cpp renamedialog.cpp filterbar.cpp urlbutton.moc.cpp bookmarkssidebarpage.moc.cpp infosidebarpage.moc.cpp urlnavigatorbutton.moc.cpp sidebarpage.moc.cpp sidebar.moc.cpp statusbarmessagelabel.moc.cpp ; do \
	  echo "#include \"$$file\"" >> dolphin.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> dolphin.all_cpp.final; \
	done; \
	cat dolphin.all_cpp.final dolphin.all_cpp.files > dolphin.all_cpp.cpp; \
	rm -f dolphin.all_cpp.final dolphin.all_cpp.files

#>+ 3
clean-final:
	-rm -f dolphin.all_cpp.cpp

#>+ 3
final:
	$(MAKE) dolphin_OBJECTS="$(dolphin_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) dolphin_OBJECTS="$(dolphin_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) dolphin_OBJECTS="$(dolphin_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) dolphin_OBJECTS="$(dolphin_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 47
urlnavigator.o: urlnavigator.moc 
dolphindirlister.o: dolphindirlister.moc 
settingspagebase.o: settingspagebase.moc 
dolphindirlister.lo: dolphindirlister.moc 
dolphinview.lo: dolphinview.moc 
viewpropertiesdialog.lo: viewpropertiesdialog.moc 
bookmarkssettingspage.o: bookmarkssettingspage.moc 
undomanager.lo: undomanager.moc 
dolphiniconsview.lo: dolphiniconsview.moc 
nmcheck-am: nmcheck
dolphinstatusbar.lo: dolphinstatusbar.moc 
dolphinsettingsdialog.lo: dolphinsettingsdialog.moc 
iconsviewsettingspage.lo: iconsviewsettingspage.moc 
urlnavigator.lo: urlnavigator.moc 
editbookmarkdialog.lo: editbookmarkdialog.moc 
generalsettingspage.lo: generalsettingspage.moc 
generalsettingspage.o: generalsettingspage.moc 
statusbarspaceinfo.lo: statusbarspaceinfo.moc 
dolphinstatusbar.o: dolphinstatusbar.moc 
statusbarspaceinfo.o: statusbarspaceinfo.moc 
detailsviewsettingspage.lo: detailsviewsettingspage.moc 
dolphindetailsview.lo: dolphindetailsview.moc 
filterbar.lo: filterbar.moc 
bookmarkselector.o: bookmarkselector.moc 
bookmarkssettingspage.lo: bookmarkssettingspage.moc 
dolphindetailsview.o: dolphindetailsview.moc 
renamedialog.o: renamedialog.moc 
viewsettingspage.lo: viewsettingspage.moc 
editbookmarkdialog.o: editbookmarkdialog.moc 
renamedialog.lo: renamedialog.moc 
undomanager.o: undomanager.moc 
dolphinview.o: dolphinview.moc 
viewsettingspage.o: viewsettingspage.moc 
dolphin.lo: dolphin.moc 
viewpropertiesdialog.o: viewpropertiesdialog.moc 
settingspagebase.lo: settingspagebase.moc 
iconsviewsettingspage.o: iconsviewsettingspage.moc 
nmcheck: 
bookmarkselector.lo: bookmarkselector.moc 
dolphinsettingsdialog.o: dolphinsettingsdialog.moc 
dolphiniconsview.o: dolphiniconsview.moc 
pixmapviewer.o: pixmapviewer.moc 
dolphin.o: dolphin.moc 
pixmapviewer.lo: pixmapviewer.moc 
detailsviewsettingspage.o: detailsviewsettingspage.moc 
filterbar.o: filterbar.moc 
